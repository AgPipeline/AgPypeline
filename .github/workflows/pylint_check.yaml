name: Enforcing pylint checks
on:
  push:
    branches:
      - master
      - develop
      - adding_tests
  pull_request:
    branches:
      - master
      - develop
    tags:
      - v*

jobs:
  update_python:
    runs-on: ubuntu-latest
    name: Running testing
    strategy:
      matrix:
        app: [pylint, pytest]
        include:
          - app: pylint
            pip_installs: pylint pytest
            test_command: cat action_test_files.txt | xargs python3 -m pylint --rcfile ./pylint.rc
          - app: pytest
            pip_installs: pytest pytest-cov
            test_command: python3 -m pytest --cov=. -rpP --cov-report=xml > coverage.txt
            artifacts: coverage.txt
    steps:
      - name: Current python version
        run: python3 --version || echo python3 not installed
      - name: Install Python 3.7
        uses: actions/setup-python@v2
        with:
          python_version: '3.7'
        id: install_python_3_7
      - name: Updated python version
        run: python3 --version
      - name: Update pip
        run: python3 -m pip install --upgrade --no-cache-dir pip
        id: pip-install
      - name: Fetch/update setuptools
        run: python3 -m pip install --upgrade --no-cache-dir setuptools
        id: setuptools-install
      - name: Install python-apt
        run: sudo apt-get install -y python-apt
      - name: HACK to fix apt-get update problem w/ different python versions
        run: 'cd /usr/lib/python3/dist-packages && sudo cp apt_pkg.cpython-36m-x86_64-linux-gnu.so apt_pkg.so'
      - name: Update apt-get
        run: sudo apt-get update
      - name: Fetch/update pylint
        run: python3 -m pip install --upgrade --no-cache-dir ${{ matrix.pip_installs }}
        id: pylint-install
      - name: Fetch source code
        uses: actions/checkout@v2
        id: fetch-source
      - name: Finding files
        run: find . -type f -name "*.py" > action_pylint_files.txt
        id: find-python-files
      - name: Install system requirements
        shell: bash
        run: 'sudo apt-get install -y python3-gdal gdal-bin libgdal-dev gcc g++ python3.7-dev'
        id: install-gdal-other-reqs
      - name: Install Python numpy
        shell: bash
        run: 'python3 -m pip install --upgrade --no-cache-dir numpy wheel terrautils'
        id: install-python-numpy
      - name: Install Python pygdal
        shell: bash
        run: 'sudo python3 -m pip install --no-cache-dir pygdal==2.2.3.5'
        id: install-python-pygdal
      - name: Install system requirements from source
        shell: bash
        run: 'if [ -s "packages.txt" ]; then (cat packages.txt | sudo xargs apt-get install -y --no-install-recommends) || (echo "Failed to install additional packages" && exit 1); fi'
        id: install-system-reqs
      - name: Install Python requirements from source
        shell: bash
        run: 'if [ -s "requirements.txt" ]; then (python3 -m pip install --no-cache-dir -r requirements.txt) || (echo "Failed to install Python requirements" && exit 1); fi'
        id: install-python-reqs
      - name: Run action pylint script
        shell: bash
        run: 'if [ -s ".github/workflows/action_pylint.sh" ]; then (chmod +x ".github/workflows/action_pylint.sh" && ./.github/workflows/action_pylint.sh) || (echo "Error running shell script" && exit 1); fi'
        id: run-special-action-script
      - name: Fetching pylint.rc file
        if: ${{ matrix.app == 'pylint' }}
        run: wget https://raw.githubusercontent.com/AgPipeline/Organization-info/master/pylint.rc
        id: fetch_pylint_resource
      - name: Listing
        run: ls -la
      - name: Files to be linted
        run: cat action_test_files.txt
      - name: Running Test
        run: ${{ matrix.test_command }}
      - name: Upload testing artifact
        uses: actions/upload-artifact@v2
        with:
          name: testing_artifacts
          path: ${{ matrix.artifacts }}
        if: ${{ matrix.artifacts }}
        - name: Upload coverage to Codecov
          uses: codecov/codecov-action@v1
          if: ${{ matrix.app == 'pytest' }}
